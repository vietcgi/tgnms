---
- set_fact:
    e2e_controller_path: "{{ e2e_path }}/e2e-{{ escaped_controller_name }}"
    e2e_audit_logs_path: "{{ audit_logs_gfs_path }}/{{ escaped_controller_name }}"
    controller_service_name: "e2e-{{escaped_controller_name}}_e2e_controller"

- name: Make directory
  file:
    path: "{{ e2e_controller_path }}/env"
    state: directory
    owner: "{{ docker_user }}"
    group: docker
    mode: 0755

- name: Make audit log directory
  file:
    path: "{{ e2e_audit_logs_path }}"
    owner: "{{ docker_user }}"
    group: docker
    state: directory
    mode: 0755

- name: Ensure .current file exists
  copy:
    content: ""
    dest: "{{ e2e_controller_path }}/.current"
    force: no
    group: docker
    mode: 0644

- name: copy env files
  template:
    src: "{{ item.src }}"
    dest: "{{ e2e_controller_path }}/env"
    force: "{{ item.force }}"
    owner: "{{ docker_user }}"
    group: docker
    mode: "0644"
  loop:
    - { src: "defaults.env", force: yes }
    - { src: "overrides.env", force: no }

- name: Read .current file
  slurp:
    src: "{{ e2e_controller_path }}/.current"
  register: current_file

- name: Set old_data_folder
  set_fact:
    data_folder: "{{ e2e_controller_path }}/data_{{ ansible_date_time.year }}{{ ansible_date_time.month }}{{ ansible_date_time.day }}{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}"
    data_folder_symlink: "{{ e2e_controller_path }}/data"
    old_data_folder: "{{ current_file['content'] | b64decode | trim }}"

- name: Old data folder stat
  stat:
    path: "{{ old_data_folder }}"
  register: old_data_folder_stat
  when: old_data_folder != ''

- name: make directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_user }}"
    group: docker
    mode: 0755
  with_items:
    - "{{ data_folder }}"
    - "{{ data_folder }}/cfg"
    - "{{ data_folder }}/scripts"

- name: Copy old data folder
  command: "rsync -av --exclude=\"images\" {{ old_data_folder }}/ {{ data_folder }}"
  when: old_data_folder != '' and old_data_folder_stat.stat.exists == True

- name: Create symlink for current data folder
  file:
    src: "{{ data_folder }}"
    dest: "{{ data_folder_symlink }}"
    state: link
    owner: "{{ docker_user }}"
    group: docker

- name: copy compose file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ docker_user }}"
    group: docker
    mode: "{{ item.perm }}"
    force: yes
  with_items:
    - src: docker-compose.yml
      dest: "{{ e2e_path }}/docker-compose-e2e-{{ escaped_controller_name }}.yml"
      perm: "0644"

- name: copy start scripts
  template:
    src: "{{ item }}"
    dest: "{{ data_folder }}/scripts"
    owner: "{{ docker_user }}"
    group: docker
    mode: "0755"
    force: yes
  loop:
    - e2e_controller.start
    - nms_aggregator.start
    - stats_agent.start

- name: copy topology file
  template:
    src: e2e_topology.conf
    dest: "{{ data_folder }}/{{ E2E_TOPOLOGY_FILE }}"
    owner: "{{ docker_user }}"
    group: docker
    mode: "0644"
    force: no

- name: store current e2e version
  shell: |
    export IMAGEID=$(docker service inspect {{controller_service_name}} -f {{'"{{.Spec.TaskTemplate.ContainerSpec.Image}}"'}})
    if [ -z $IMAGEID ]; then >&2 echo "No previous controller version to migrate" && exit 0; fi
    export CONTAINERID=$(docker create $IMAGEID sh)
    if [ -z $CONTAINERID ]; then >&2 echo "Could not create container from $IMAGEID" && exit 1; fi
    docker export $CONTAINERID | tar -x etc/tgversion -O > {{ data_folder }}/last_version
    docker rm $CONTAINERID
  ignore_errors: yes

- name: stop e2e before migrating config
  shell: docker service scale {{controller_service_name}}=0
  ignore_errors: yes

- name: migrate e2e config
  shell: >
    docker run --rm
    --mount type=bind,source={{ data_folder }},target=/data
    --entrypoint=""
    --network=terragraph_net
    {{e2e_image}} sh -c "[ -x /usr/sbin/migrate_e2e_data ] && /usr/sbin/migrate_e2e_data --from_ver_file /data/last_version --to_ver_file /etc/tgversion"
  register: migrate_result
  ignore_errors: yes
- debug: msg={{migrate_result.stdout}}

- name: run compose
  shell: "docker stack deploy -c {{ e2e_path }}/docker-compose-e2e-{{ escaped_controller_name }}.yml --with-registry-auth --prune e2e-{{ escaped_controller_name }}"

- name: wait for API service to come up
  command: "docker run --network=terragraph_net byrnedo/alpine-curl --noproxy '*' e2e-{{ escaped_controller_name }}_api_service:8080"
  register: result
  retries: 5
  delay: 10
  failed_when: result.rc >= 1
  until: result.rc == 0

- name: set default controller config values
  command: "docker run --rm --mount type=bind,source={{ e2e_path }}/scripts/set_controller_config.sh,target=/set_controller_config.sh --network=terragraph_net dwdraju/alpine-curl-jq /set_controller_config.sh {{ escaped_controller_name }}{% if keycloak_enabled %} {{ keycloak_token }}{% endif %}"
  ignore_errors: yes
